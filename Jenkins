node{
    
    def maven = tool name: "Maven"
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '3')), pipelineTriggers([pollSCM('* * * * *')])])
    
    echo "Jenkins URL is: ${env.JENKINS_URL}"
    
    echo "Jenkins Job Name: ${env.JOB_NAME}"
    
    echo "Jenkins Node: ${env.NODE_NAME}"
    
    echo "Jenkins Job URL: ${env.JOB_URL}"
    
    echo "Jenkins Build URL: ${env.BUILD_URL}"
    
    try{
        
        slackNotifications('Started')
        
        //Checkout Code From Git
    stage('Checkout SCM')
    {
        git branch: 'development', credentialsId: '034672a4-2c42-46e2-956c-12b44d44a50e', url: 'https://github.com/saubhage-rahul/maven-web-application.git'
    }
    
    //Maven Build
    stage('Maven Build')
    {
        sh "${maven}/bin/mvn clean package"
    }
    
    //Execute SonarQube Report
    stage('Sonar')
    {
        sh "${maven}/bin/mvn sonar:sonar"
    }
    
    //Upload Artifact into Nexus Repo
    stage('Upload Artifact')
    {
        sh "${maven}/bin/mvn clean deploy"
    }
    
    //Deploy to Tomcat Server
    stage('Deploy to Tomcat')
    {
      sshagent(['88191867-5e68-4aa8-8f94-552256f9af2a']) {
       
       sh "scp -o StrictHostKeyChecking=no target/*.war ec2-user@172.31.32.53:/opt/apache-tomcat-8.5.82/webapps/"
     }
    }
} //try end
catch (e){
    slackNotifications(currentBuild.result)
    throw e
} //catch end
finally{
    slackNotifications(currentBuild.result)
 } //finally end
}//node close

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


    
    
